{"remainingRequest":"/Users/kimjunho/front/ssafyart_front/node_modules/babel-loader/lib/index.js!/Users/kimjunho/front/ssafyart_front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kimjunho/front/ssafyart_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimjunho/front/ssafyart_front/node_modules/vue-picture-input/PictureInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kimjunho/front/ssafyart_front/node_modules/vue-picture-input/PictureInput.vue","mtime":1587918944184},{"path":"/Users/kimjunho/front/ssafyart_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kimjunho/front/ssafyart_front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kimjunho/front/ssafyart_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kimjunho/front/ssafyart_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PictureInput.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div ref=\"container\" id=\"picture-input\" class=\"picture-input\">\n    <div v-if=\"!supportsUpload\" v-html=\"strings.upload\"></div>\n    <div v-else-if=\"supportsPreview\">\n      <div class=\"preview-container\"\n        :style=\"{maxWidth: previewWidth + 'px', height: previewHeight + 'px', borderRadius: radius + '%'}\">\n          <canvas ref=\"previewCanvas\"\n            class=\"picture-preview\"\n            :class=\"computedClasses\"\n            @drag.stop.prevent=\"\"\n            @dragover.stop.prevent=\"\"\n            @dragstart.stop.prevent=\"onDragStart\"\n            @dragenter.stop.prevent=\"onDragStart\"\n            @dragend.stop.prevent=\"onDragStop\"\n            @dragleave.stop.prevent=\"onDragStop\"\n            @drop.stop.prevent=\"onFileDrop\"\n            @click.prevent=\"onClick\"\n            :style=\"{height: previewHeight + 'px', zIndex: zIndex + 1 }\">\n          </canvas>\n        <div v-if=\"!imageSelected && !plain\"\n          class=\"picture-inner\"\n            :style=\"{top: -previewHeight + 'px', marginBottom: -previewHeight + 'px', fontSize: fontSize, borderRadius: radius + '%', zIndex: zIndex + 2}\">\n          <span v-if=\"supportsDragAndDrop\" class=\"picture-inner-text\" v-html=\"strings.drag\"></span>\n          <span v-else class=\"picture-inner-text\" v-html=\"strings.tap\"></span>\n        </div>\n      </div>\n      <button v-if=\"imageSelected && !hideChangeButton\" @click.prevent=\"selectImage\" :class=\"buttonClass\">{{ strings.change }}</button>\n      <button v-if=\"imageSelected && removable\" @click.prevent=\"removeImage\" :class=\"removeButtonClass\">{{ strings.remove }}</button>\n      <button v-if=\"imageSelected && toggleAspectRatio && width !== height\" @click.prevent=\"rotateImage\" :class=\"aspectButtonClass\">{{ strings.aspect }}</button>\n    </div>\n    <div v-else>\n      <button v-if=\"!imageSelected\" @click.prevent=\"selectImage\" :class=\"buttonClass\">{{ strings.select }}</button>\n      <div v-else>\n        <div v-html=\"strings.selected\"></div>\n        <button v-if=\"!hideChangeButton\" @click.prevent=\"selectImage\" :class=\"buttonClass\">{{ strings.change }}</button>\n        <button v-if=\"removable\" @click.prevent=\"removeImage\" :class=\"removeButtonClass\">{{ strings.remove }}</button>\n      </div>\n    </div>\n    <input ref=\"fileInput\" type=\"file\" :name=\"name\" :id=\"id\" :accept=\"accept\" @change=\"onFileChange\">\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'picture-input',\n  props: {\n    width: {\n      type: [String, Number],\n      default: Number.MAX_SAFE_INTEGER\n    },\n    height: {\n      type: [String, Number],\n      default: Number.MAX_SAFE_INTEGER\n    },\n    margin: {\n      type: [String, Number],\n      default: 0\n    },\n    accept: {\n      type: String,\n      default: 'image/*'\n    },\n    size: {\n      type: [String, Number],\n      default: Number.MAX_SAFE_INTEGER\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    id: {\n      type: [String, Number],\n      default: null\n    },\n    buttonClass: {\n      type: String,\n      default: 'btn btn-primary button'\n    },\n    removeButtonClass: {\n      type: String,\n      default: 'btn btn-secondary button secondary'\n    },\n    aspectButtonClass: {\n      type: String,\n      default: 'btn btn-secondary button secondary'\n    },\n    prefill: {\n      type: [String, File],\n      default: ''\n    },\n    prefillOptions: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    crop: {\n      type: Boolean,\n      default: true\n    },\n    radius: {\n      type: [String, Number],\n      default: 0\n    },\n    removable: {\n      type: Boolean,\n      default: false\n    },\n    hideChangeButton: {\n      type: Boolean,\n      default: false\n    },\n    autoToggleAspectRatio: {\n      type: Boolean,\n      default: false\n    },\n    toggleAspectRatio: {\n      type: Boolean,\n      default: false\n    },\n    changeOnClick: {\n      type: Boolean,\n      default: true\n    },\n    plain: {\n      type: Boolean,\n      default: false\n    },\n    zIndex: {\n      type: Number,\n      default: 10000\n    },\n    alertOnError: {\n      type: Boolean,\n      default: true\n    },\n    customStrings: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  watch: {\n    prefill () {\n      if (this.prefill) {\n        this.preloadImage(this.prefill, this.prefillOptions)\n      } else {\n        this.removeImage()\n      }\n    }\n  },\n  data () {\n    return {\n      imageSelected: false,\n      previewHeight: 0,\n      previewWidth: 0,\n      draggingOver: false,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      strings: {\n        upload: '<p>Your device does not support file uploading.</p>',\n        drag: 'Drag an image or <br>click here to select a file',\n        tap: 'Tap here to select a photo <br>from your gallery',\n        change: 'Change Photo',\n        aspect: 'Landscape/Portrait',\n        remove: 'Remove Photo',\n        select: 'Select a Photo',\n        selected: '<p>Photo successfully selected!</p>',\n        fileSize: 'The file size exceeds the limit',\n        fileType: 'This file type is not supported.'\n      }\n    }\n  },\n  mounted () {\n    this.updateStrings()\n    if (this.prefill) {\n      this.preloadImage(this.prefill, this.prefillOptions)\n    }\n\n    this.$nextTick(() => {\n      window.addEventListener('resize', this.onResize)\n      this.onResize()\n    })\n    if (this.supportsPreview) {\n      this.pixelRatio = Math.round(window.devicePixelRatio || window.screen.deviceXDPI / window.screen.logicalXDPI)\n      const canvas = this.$refs.previewCanvas\n      if (canvas.getContext) {\n        this.context = canvas.getContext('2d')\n        this.context.scale(this.pixelRatio, this.pixelRatio)\n      }\n    }\n    if (this.accept !== 'image/*') {\n      this.fileTypes = this.accept.split(',')\n      this.fileTypes = this.fileTypes.map(s => s.trim())\n    }\n\n    this.canvasWidth = this.width\n    this.canvasHeight = this.height\n\n    this.$on('error', this.onError)\n  },\n  beforeDestroy () {\n    window.removeEventListener('resize', this.onResize)\n    this.$off('error', this.onError)\n  },\n  methods: {\n    updateStrings () {\n      for (let s in this.customStrings) {\n        if (s in this.strings && typeof this.customStrings[s] === 'string') {\n          this.strings[s] = this.customStrings[s]\n        }\n      }\n    },\n    onClick () {\n      if (!this.imageSelected) {\n        this.selectImage()\n        return\n      }\n\n      if (this.changeOnClick) {\n        this.selectImage()\n      }\n\n      this.$emit('click')\n    },\n    onResize () {\n      this.resizeCanvas()\n\n      if (this.imageObject) {\n        this.drawImage(this.imageObject)\n      }\n    },\n    onDragStart () {\n      if (!this.supportsDragAndDrop) {\n        return\n      }\n      this.draggingOver = true\n    },\n    onDragStop () {\n      if (!this.supportsDragAndDrop) {\n        return\n      }\n      this.draggingOver = false\n    },\n    onFileDrop (e) {\n      this.onDragStop()\n      this.onFileChange(e)\n    },\n    onFileChange (e, prefill) {\n      let files = e.target.files || e.dataTransfer.files\n      if (!files.length) {\n        return\n      }\n      if (files[0].size <= 0 || files[0].size > this.size * 1024 * 1024) {\n        this.$emit('error', {\n          type: 'fileSize',\n          fileSize: files[0].size,\n          fileType: files[0].type,\n          fileName: files[0].name,\n          message: this.strings.fileSize + ' (' + this.size + 'MB)'\n        })\n        return\n      }\n      if (files[0].name === this.fileName && files[0].size === this.fileSize && this.fileModified === files[0].lastModified) {\n        return\n      }\n\n      this.file = files[0]\n      this.fileName = files[0].name\n      this.fileSize = files[0].size\n      this.fileModified = files[0].lastModified\n      this.fileType = files[0].type\n\n      if (this.accept === 'image/*') {\n        if (files[0].type.substr(0, 6) !== 'image/') {\n          return\n        }\n      } else {\n        if (this.fileTypes.indexOf(files[0].type) === -1) {\n          this.$emit('error', {\n            type: 'fileType',\n            fileSize: files[0].size,\n            fileType: files[0].type,\n            fileName: files[0].name,\n            message: this.strings.fileType\n          })\n          return\n        }\n      }\n      this.imageSelected = true\n      this.image = ''\n      if (this.supportsPreview) {\n        this.loadImage(files[0], prefill || false)\n      } else {\n        if (prefill) {\n          this.$emit('prefill')\n        } else {\n          this.$emit('change', this.image)\n        }\n      }\n    },\n    onError (error) {\n      if (this.alertOnError) {\n        alert(error.message)\n      }\n    },\n    loadImage (file, prefill) {\n      this.getEXIFOrientation(file, orientation => {\n        this.setOrientation(orientation)\n        let reader = new FileReader()\n        reader.onload = e => {\n          this.image = e.target.result\n          if (prefill) {\n            this.$emit('prefill')\n          } else {\n            this.$emit('change', this.image)\n          }\n          this.imageObject = new Image()\n          this.imageObject.onload = () => {\n            if (this.autoToggleAspectRatio) {\n              let canvasOrientation = this.getOrientation(this.canvasWidth, this.canvasHeight)\n              let imageOrientation = this.getOrientation(this.imageObject.width, this.imageObject.height)\n              if (canvasOrientation !== imageOrientation) {\n                this.rotateCanvas()\n              }\n            }\n            this.drawImage(this.imageObject)\n          }\n          this.imageObject.src = this.image\n        }\n        reader.readAsDataURL(file)\n      })\n    },\n    drawImage (image) {\n      this.imageWidth = image.width\n      this.imageHeight = image.height\n      this.imageRatio = image.width / image.height\n      let offsetX = 0\n      let offsetY = 0\n      let scaledWidth = this.previewWidth\n      let scaledHeight = this.previewHeight\n      const previewRatio = this.previewWidth / this.previewHeight\n      if (this.crop) {\n        if (this.imageRatio >= previewRatio) {\n          scaledWidth = scaledHeight * this.imageRatio\n          offsetX = (this.previewWidth - scaledWidth) / 2\n        } else {\n          scaledHeight = scaledWidth / this.imageRatio\n          offsetY = (this.previewHeight - scaledHeight) / 2\n        }\n      } else {\n        if (this.imageRatio >= previewRatio) {\n          scaledHeight = scaledWidth / this.imageRatio\n          offsetY = (this.previewHeight - scaledHeight) / 2\n        } else {\n          scaledWidth = scaledHeight * this.imageRatio\n          offsetX = (this.previewWidth - scaledWidth) / 2\n        }\n      }\n      const canvas = this.$refs.previewCanvas\n      canvas.style.background = 'none'\n      canvas.width = this.previewWidth * this.pixelRatio\n      canvas.height = this.previewHeight * this.pixelRatio\n      this.context.setTransform(1, 0, 0, 1, 0, 0)\n      this.context.clearRect(0, 0, canvas.width, canvas.height)\n      if (this.rotate) {\n        this.context.translate(offsetX * this.pixelRatio, offsetY * this.pixelRatio)\n        this.context.translate(scaledWidth / 2 * this.pixelRatio, scaledHeight / 2 * this.pixelRatio)\n        this.context.rotate(this.rotate)\n        offsetX = -scaledWidth / 2\n        offsetY = -scaledHeight / 2\n      }\n      this.context.drawImage(image,\n        offsetX * this.pixelRatio,\n        offsetY * this.pixelRatio,\n        scaledWidth * this.pixelRatio,\n        scaledHeight * this.pixelRatio)\n    },\n    selectImage () {\n      this.$refs.fileInput.click()\n    },\n    removeImage () {\n      this.$refs.fileInput.value = ''\n      this.$refs.fileInput.type = ''\n      this.$refs.fileInput.type = 'file'\n      this.fileName = ''\n      this.fileType = ''\n      this.fileSize = 0\n      this.fileModified = 0\n      this.imageSelected = false\n      this.image = ''\n      this.file = null\n      this.imageObject = null\n      this.$refs.previewCanvas.style.backgroundColor = 'rgba(200,200,200,.25)'\n      this.$refs.previewCanvas.width = this.previewWidth * this.pixelRatio\n      this.$emit('remove')\n    },\n    rotateImage () {\n      this.rotateCanvas()\n\n      if (this.imageObject) {\n        this.drawImage(this.imageObject)\n      }\n\n      let newOrientation = this.getOrientation(this.canvasWidth, this.canvasHeight)\n      this.$emit('aspectratiochange', newOrientation)\n    },\n    resizeCanvas () {\n      let previewRatio = this.canvasWidth / this.canvasHeight\n      let newWidth = this.$refs.container.clientWidth\n      if (!this.toggleAspectRatio && newWidth === this.containerWidth) {\n        return\n      }\n      this.containerWidth = newWidth\n      this.previewWidth = Math.min(this.containerWidth - this.margin * 2, this.canvasWidth)\n      this.previewHeight = this.previewWidth / previewRatio\n    },\n    getOrientation (width, height) {\n      let orientation = 'square'\n\n      if (width > height) {\n        orientation = 'landscape'\n      } else if (width < height) {\n        orientation = 'portrait'\n      }\n\n      return orientation\n    },\n    switchCanvasOrientation () {\n      const canvasWidth = this.canvasWidth\n      const canvasHeight = this.canvasHeight\n\n      this.canvasWidth = canvasHeight\n      this.canvasHeight = canvasWidth\n    },\n    rotateCanvas () {\n      this.switchCanvasOrientation()\n      this.resizeCanvas()\n    },\n    setOrientation (orientation) {\n      this.rotate = false\n      if (orientation === 8) {\n        this.rotate = -Math.PI / 2\n      } else if (orientation === 6) {\n        this.rotate = Math.PI / 2\n      } else if (orientation === 3) {\n        this.rotate = -Math.PI\n      }\n    },\n    getEXIFOrientation (file, callback) {\n      var reader = new FileReader()\n      reader.onload = e => {\n        var view = new DataView(e.target.result)\n        if (view.getUint16(0, false) !== 0xFFD8) {\n          return callback(-2)\n        }\n        var length = view.byteLength\n        var offset = 2\n        while (offset < length) {\n          var marker = view.getUint16(offset, false)\n          offset += 2\n          if (marker === 0xFFE1) {\n            if (view.getUint32(offset += 2, false) !== 0x45786966) {\n              return callback(-1)\n            }\n            var little = view.getUint16(offset += 6, false) === 0x4949\n            offset += view.getUint32(offset + 4, little)\n            var tags = view.getUint16(offset, little)\n            offset += 2\n            for (var i = 0; i < tags; i++) {\n              if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n                return callback(view.getUint16(offset + (i * 12) + 8, little))\n              }\n            }\n          } else if ((marker & 0xFF00) !== 0xFF00) {\n            break\n          } else {\n            offset += view.getUint16(offset, false)\n          }\n        }\n        return callback(-1)\n      }\n      reader.readAsArrayBuffer(file.slice(0, 65536))\n    },\n    preloadImage (source, options) {\n      // ie 11 support\n      let File = window.File\n      try {\n        new File([], '') // eslint-disable-line\n      } catch (e) {\n        File = class File extends Blob {\n          constructor (chunks, filename, opts = {}) {\n            super(chunks, opts)\n            this.lastModifiedDate = new Date()\n            this.lastModified = +this.lastModifiedDate\n            this.name = filename\n          }\n        }\n      }\n      options = Object.assign({}, options)\n      if (typeof source === 'object') {\n        this.imageSelected = true\n        this.image = ''\n        if (this.supportsPreview) {\n          this.loadImage(source, true)\n        } else {\n          this.$emit('prefill')\n        }\n        return\n      }\n      let headers = new Headers()\n      headers.append('Accept', 'image/*')\n      fetch(source, {\n        method: 'GET',\n        mode: 'cors',\n        headers: headers\n      }).then(response => {\n        return response.blob()\n      })\n      .then(imageBlob => {\n        let e = { target: { files: [] } }\n        const fileName = options.fileName || source.split('/').slice(-1)[0]\n        let mediaType = options.mediaType || ('image/' + (options.fileType || fileName.split('.').slice(-1)[0]))\n        mediaType = mediaType.replace('jpg', 'jpeg')\n        e.target.files[0] = new File([imageBlob], fileName, { type: mediaType })\n        this.onFileChange(e, true)\n      })\n      .catch(err => {\n        this.$emit('error', {\n          type: 'failedPrefill',\n          message: 'Failed loading prefill image: ' + err\n        })\n      })\n    }\n  },\n  computed: {\n    supportsUpload () {\n      if (navigator.userAgent.match(/(Android (1.0|1.1|1.5|1.6|2.0|2.1))|(Windows Phone (OS 7|8.0))|(XBLWP)|(ZuneWP)|(w(eb)?OSBrowser)|(webOS)|(Kindle\\/(1.0|2.0|2.5|3.0))/)) {\n        return false\n      }\n      const el = document.createElement('input')\n      el.type = 'file'\n      return !el.disabled\n    },\n    supportsPreview () {\n      return window.FileReader && !!window.CanvasRenderingContext2D\n    },\n    supportsDragAndDrop () {\n      const div = document.createElement('div')\n      return (('draggable' in div) || ('ondragstart' in div && 'ondrop' in div)) && !('ontouchstart' in window || navigator.msMaxTouchPoints)\n    },\n    computedClasses () {\n      const classObject = {}\n      classObject['dragging-over'] = this.draggingOver\n      return classObject\n    },\n    fontSize () {\n      return Math.min(0.04 * this.previewWidth, 21) + 'px'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.picture-input {\n  width: 100%;\n  margin: 0 auto;\n  text-align: center;\n}\n.preview-container {\n  width: 100%;\n  box-sizing: border-box;\n  margin: 0 auto;\n  cursor: pointer;\n  overflow: hidden;\n}\n.picture-preview {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 10001;\n  box-sizing: border-box;\n  background-color: rgba(200,200,200,.25);\n}\n.picture-preview.dragging-over {\n  filter: brightness(0.5);\n}\n.picture-inner {\n  position: relative;\n  z-index: 10002;\n  pointer-events: none;\n  box-sizing: border-box;\n  margin: 1em auto;\n  padding: 0.5em;\n  border: .3em dashed rgba(66,66,66,.15);\n  border-radius: 8px;\n  width: calc(100% - 2.5em);\n  height: calc(100% - 2.5em);\n  display: table;\n}\n.picture-inner .picture-inner-text {\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n  font-size: 2em;\n  line-height: 1.5;\n}\nbutton {\n  margin: 1em .25em;\n  cursor: pointer;\n}\ninput[type=file] {\n  display: none;\n}\n</style>\n"],"sourceRoot":"node_modules/vue-picture-input"}]}