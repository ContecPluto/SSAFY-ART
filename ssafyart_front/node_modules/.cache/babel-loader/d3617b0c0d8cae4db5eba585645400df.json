{"remainingRequest":"/Users/kimjunho/front/ssafyart_front/node_modules/babel-loader/lib/index.js!/Users/kimjunho/front/ssafyart_front/node_modules/eslint-loader/index.js??ref--13-0!/Users/kimjunho/front/ssafyart_front/src/store/modules/auth.js","dependencies":[{"path":"/Users/kimjunho/front/ssafyart_front/src/store/modules/auth.js","mtime":1587922132922},{"path":"/Users/kimjunho/front/ssafyart_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kimjunho/front/ssafyart_front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kimjunho/front/ssafyart_front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGp3dERlY29kZSBmcm9tICdqd3QtZGVjb2RlJzsKdmFyIHN0YXRlID0gewogIHRva2VuOiBudWxsCn07CnZhciBnZXR0ZXJzID0gewogIGlzTG9nZ2VkSW46IGZ1bmN0aW9uIGlzTG9nZ2VkSW4oc3RhdGUsIHRva2VuKSB7CiAgICBjb25zb2xlLmxvZyh0b2tlbik7CiAgICByZXR1cm4gdG9rZW4gPyB0cnVlIDogZmFsc2U7CiAgfSwKICByZXF1ZXN0SGVhZGVyOiBmdW5jdGlvbiByZXF1ZXN0SGVhZGVyKHN0YXRlKSB7CiAgICByZXR1cm4gewogICAgICBoZWFkZXJzOiB7CiAgICAgICAgQXV0aG9yaXphdGlvbjogJ0pXVCAnICsgc3RhdGUudG9rZW4KICAgICAgfQogICAgfTsKICB9LAogIHVzZXJJZDogZnVuY3Rpb24gdXNlcklkKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUudG9rZW4gPyBqd3REZWNvZGUoc3RhdGUudG9rZW4pLnVzZXJfaWQgOiBudWxsOwogIH0KfTsgLy8g7IOB7YOcKO2GoO2BsCnsnYQg67Cb7JWE7JmA7IScIHN0YXRl66W8IHVwZGF0ZQoKdmFyIG11dGF0aW9ucyA9IHsKICBzZXRUb2tlbjogZnVuY3Rpb24gc2V0VG9rZW4oc3RhdGUsIHRva2VuKSB7CiAgICBzdGF0ZS50b2tlbiA9IHRva2VuOwogIH0sCiAgc2V0TG9hZGluZzogZnVuY3Rpb24gc2V0TG9hZGluZyhzdGF0ZSwgc3RhdHVzKSB7CiAgICBzdGF0ZS5sb2FkaW5nID0gc3RhdHVzOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKG9wdGlvbnMsIHRva2VuKSB7CiAgICBvcHRpb25zLmNvbW1pdCgnc2V0VG9rZW4nLCB0b2tlbik7CiAgfSwKICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dChvcHRpb25zKSB7CiAgICBvcHRpb25zLmNvbW1pdCgnc2V0VG9rZW4nKTsKICB9LAogIHN0YXJ0TG9hZGluZzogZnVuY3Rpb24gc3RhcnRMb2FkaW5nKG9wdGlvbnMpIHsKICAgIG9wdGlvbnMuY29tbWl0KCdzZXRMb2FkaW5nJywgdHJ1ZSk7CiAgfSwKICBlbmRMb2FkaW5nOiBmdW5jdGlvbiBlbmRMb2FkaW5nKG9wdGlvbnMpIHsKICAgIG9wdGlvbnMuY29tbWl0KCdzZXRMb2FkaW5nJywgZmFsc2UpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zLAogIGdldHRlcnM6IGdldHRlcnMKfTs="},{"version":3,"sources":["/Users/kimjunho/front/ssafyart_front/src/store/modules/auth.js"],"names":["jwtDecode","state","token","getters","isLoggedIn","console","log","requestHeader","headers","Authorization","userId","user_id","mutations","setToken","setLoading","status","loading","actions","login","options","commit","logout","startLoading","endLoading"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AADK,CAAd;AAIA,IAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,oBAASH,KAAT,EAAgBC,KAAhB,EAAuB;AACjCG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,WAAOA,KAAK,GAAG,IAAH,GAAU,KAAtB;AACD,GAJa;AAKdK,EAAAA,aAAa,EAAE,uBAASN,KAAT,EAAgB;AAC7B,WAAO;AACLO,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,SAASR,KAAK,CAACC;AADvB;AADJ,KAAP;AAKD,GAXa;AAYdQ,EAAAA,MAAM,EAAE,gBAAST,KAAT,EAAgB;AACtB,WAAOA,KAAK,CAACC,KAAN,GAAcF,SAAS,CAACC,KAAK,CAACC,KAAP,CAAT,CAAuBS,OAArC,GAA+C,IAAtD;AACD;AAda,CAAhB,C,CAiBA;;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,kBAASZ,KAAT,EAAgBC,KAAhB,EAAuB;AAC/BD,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD,GAHe;AAIhBY,EAAAA,UAAU,EAAE,oBAASb,KAAT,EAAgBc,MAAhB,EAAwB;AAClCd,IAAAA,KAAK,CAACe,OAAN,GAAgBD,MAAhB;AACD;AANe,CAAlB;AASA,IAAME,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE,eAASC,OAAT,EAAkBjB,KAAlB,EAAyB;AAC9BiB,IAAAA,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2BlB,KAA3B;AACD,GAHa;AAIdmB,EAAAA,MAAM,EAAE,gBAASF,OAAT,EAAkB;AACxBA,IAAAA,OAAO,CAACC,MAAR,CAAe,UAAf;AACD,GANa;AAOdE,EAAAA,YAAY,EAAE,sBAASH,OAAT,EAAkB;AAC9BA,IAAAA,OAAO,CAACC,MAAR,CAAe,YAAf,EAA6B,IAA7B;AACD,GATa;AAUdG,EAAAA,UAAU,EAAE,oBAASJ,OAAT,EAAkB;AAC5BA,IAAAA,OAAO,CAACC,MAAR,CAAe,YAAf,EAA6B,KAA7B;AACD;AAZa,CAAhB;AAeA,eAAe;AACbnB,EAAAA,KAAK,EAALA,KADa;AAEbW,EAAAA,SAAS,EAATA,SAFa;AAGbK,EAAAA,OAAO,EAAPA,OAHa;AAIbd,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import jwtDecode from 'jwt-decode'\n\nconst state = {\n  token: null,\n}\n\nconst getters = {\n  isLoggedIn: function(state, token) {\n    console.log(token)\n    return token ? true : false\n  },\n  requestHeader: function(state) {\n    return {\n      headers: {\n        Authorization: 'JWT ' + state.token\n      }\n    }\n  },\n  userId: function(state) {\n    return state.token ? jwtDecode(state.token).user_id : null\n  }\n}\n\n// 상태(토큰)을 받아와서 state를 update\nconst mutations = {\n  setToken: function(state, token) {\n    state.token = token\n  },\n  setLoading: function(state, status) {\n    state.loading = status\n  }\n}\n\nconst actions = {\n  login: function(options, token) {\n    options.commit('setToken', token)\n  },\n  logout: function(options) {\n    options.commit('setToken')\n  },\n  startLoading: function(options) {\n    options.commit('setLoading', true)\n  },\n  endLoading: function(options) {\n    options.commit('setLoading', false)\n  },\n}\n\nexport default {\n  state,\n  mutations,\n  actions,\n  getters,\n}"]}]}